name: Docker

on:
  workflow_dispatch:
  push:
    tags: [ 'v*.*.*' ]
env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Add musl packages
        run: sudo apt install -y musl-tools
      - name: Add musl toolchain
        run: rustup target add x86_64-unknown-linux-musl
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Rust Cache
        uses: Swatinem/rust-cache@v2
      - name: Build lipl-storage-server-fs
        run: cargo build --release --target x86_64-unknown-linux-musl -p lipl-storage-server
      - name: Install cosign
        uses: sigstore/cosign-installer@v3.3.0
        with:
          cosign-release: 'v2.2.2'
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log into Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          labels: |
            org.opencontainers.image.description=Webserver serving json lyrics and playlists
            org.opencontainers.image.authors=Paul Min
            org.opencontainers.image.source=https://github.com/paulusminus/lipl-storage
            org.opencontainers.image.licenses=MIT
          tags: |
            type=semver,pattern={{ version }}
      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          build-contexts: |
            pwa=https://github.com/paulusminus/lipl-control/releases/download/v1.8.3/web.tar.gz
      - name: Sign the published Docker image
        env:
          TAGS: ${{ steps.meta.outputs.tags }}
          DIGEST: ${{ steps.build-and-push.outputs.digest }}
        run: echo "${TAGS}" | xargs -I {} cosign sign --yes {}@${DIGEST}
